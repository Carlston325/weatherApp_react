{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crebe\\\\Documents\\\\WEB DEVELOPMENT COURSE PROJECTS\\\\__MY_PROJECTS__\\\\weather_react\\\\src\\\\currentLocation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport Clock from \"react-live-clock\";\nimport Forcast from \"./forcast\";\nimport loader from \"./images/WeatherIcons.gif\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Weather() {\n  _s();\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n    return `${day}, ${date} ${month} ${year}`;\n  };\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true\n  };\n  const [state, setState] = useState({\n    lat: undefined,\n    lon: undefined,\n    errorMessage: undefined,\n    temperatureC: undefined,\n    temperatureF: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    icon: \"CLEAR_DAY\",\n    sunrise: undefined,\n    sunset: undefined,\n    errorMsg: undefined\n  });\n  function componentDidMount() {\n    if (navigator.geolocation) {\n      this.getPosition()\n      //If user allow location service then will fetch data & send it to get-weather function.\n      .then(position => {\n        this.getWeather(position.coords.latitude, position.coords.longitude);\n      }).catch(err => {\n        //If user denied location service then standard location weather will le shown on basis of latitude & latitude.\n        this.getWeather(28.67, 77.22);\n        alert(\"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real time weather.\");\n      });\n    } else {\n      alert(\"Geolocation not available\");\n    }\n    this.timerID = setInterval(() => {\n      this.getWeather(state.lat, state.lon);\n    }, 43000000 //default milliseconds is 600000\n    );\n  }\n\n  // componentWillUnmount() {\n  // clearInterval(this.timerID);\n  // }\n\n  // tick = () => {\n  //   this.getPosition()\n  //   .then((position) => {\n  //     this.getWeather(position.coords.latitude, position.coords.longitude)\n  //   })\n  //   .catch((err) => {\n  //     setState({ errorMessage: err.message });\n  //   });\n  // }\n\n  // getPosition = (options) => {\n  //   return new Promise(function (resolve, reject) {\n  //     navigator.geolocation.getCurrentPosition(resolve, reject, options);\n  //   });\n  // };\n\n  async function getWeather(lat, lon) {\n    try {\n      const response = await axios.get(`${apiKeys.base}current?lat=${lat}&lon=${lon}&key=${apiKeys.key}`);\n      const result = response.data;\n      setState({\n        lat: result.lat,\n        lon: result.lon,\n        city: result.city_name,\n        temperatureC: Math.round(result.temp),\n        temperatureF: Math.round(result.temp * 1.8 + 32),\n        humidity: result.rh,\n        description: result.weather.description,\n        country: result.country_code\n        // sunrise: this.getTimeFromUnixTimeStamp(data.sys.sunrise),\n\n        // sunset: this.getTimeFromUnixTimeStamp(data.sys.sunset),\n      });\n      console.log(result);\n    } catch (error) {\n      console.log(error.message);\n    }\n    switch (state.description) {\n      case \"Clear sky\":\n        setState({\n          icon: \"CLEAR_DAY\"\n        });\n        break;\n      case \"Few clouds\":\n        setState({\n          icon: \"PARTLY_CLOUDY_DAY\"\n        });\n        break;\n      case \"Overcast clouds\":\n        setState({\n          icon: \"CLOUDY\"\n        });\n        break;\n      case \"Moderate Rain\":\n        setState({\n          icon: \"RAIN\"\n        });\n        break;\n      case \"Snow\":\n        setState({\n          icon: \"SNOW\"\n        });\n        break;\n      case \"Heavy sleet\":\n        setState({\n          icon: \"WIND\"\n        });\n        break;\n      case \"Sleet\":\n        setState({\n          icon: \"SLEET\"\n        });\n        break;\n      case \"Fog\":\n        setState({\n          icon: \"FOG\"\n        });\n        break;\n      case \"Haze\":\n        setState({\n          icon: \"FOG\"\n        });\n        break;\n      case \"Thunderstorm with rain\":\n        setState({\n          icon: \"WIND\"\n        });\n        break;\n      default:\n        setState({\n          icon: \"CLEAR_DA\"\n        });\n    }\n  }\n  if (state.temperatureC) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: state.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: state.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-icon\",\n          children: [/*#__PURE__*/_jsxDEV(ReactAnimatedWeather, {\n            icon: state.icon,\n            color: defaults.color,\n            size: defaults.size,\n            animate: defaults.animate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: state.main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-time\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dmy\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"txt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-time\",\n              children: /*#__PURE__*/_jsxDEV(Clock, {\n                format: \"HH:mm:ss\",\n                interval: 1000,\n                ticking: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-date\",\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temperature\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [state.temperatureC, \"\\xB0\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Forcast, {\n        icon: state.icon,\n        weather: state.main\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: loader,\n        style: {\n          width: \"50%\",\n          WebkitUserDrag: \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\",\n          fontSize: \"22px\",\n          fontWeight: \"600\"\n        },\n        children: \"Detecting your location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"white\",\n          marginTop: \"10px\"\n        },\n        children: [\"Your current location wil be displayed on the App \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 61\n        }, this), \" & used for calculating Real time weather.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n_s(Weather, \"NuZYLBtPBLCusMmpY+OZbeAsNbQ=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","axios","apiKeys","Clock","Forcast","loader","ReactAnimatedWeather","jsxDEV","_jsxDEV","Fragment","_Fragment","Weather","_s","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","defaults","color","size","animate","state","setState","lat","undefined","lon","errorMessage","temperatureC","temperatureF","city","country","humidity","description","icon","sunrise","sunset","errorMsg","componentDidMount","navigator","geolocation","getPosition","then","position","getWeather","coords","latitude","longitude","catch","err","alert","timerID","setInterval","response","get","base","key","result","data","city_name","Math","round","temp","rh","weather","country_code","console","log","error","message","children","className","fileName","_jsxFileName","lineNumber","columnNumber","main","id","format","interval","ticking","Date","src","style","width","WebkitUserDrag","fontSize","fontWeight","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/crebe/Documents/WEB DEVELOPMENT COURSE PROJECTS/__MY_PROJECTS__/weather_react/src/currentLocation.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiKeys from \"./apiKeys\";\r\nimport Clock from \"react-live-clock\";\r\nimport Forcast from \"./forcast\";\r\nimport loader from \"./images/WeatherIcons.gif\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\n\r\nfunction Weather() {\r\n  const dateBuilder = (d) => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\",\r\n    ];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day}, ${date} ${month} ${year}`;\r\n  };\r\n\r\n  const defaults = {\r\n    color: \"white\",\r\n    size: 112,\r\n    animate: true,\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    lat: undefined,\r\n    lon: undefined,\r\n    errorMessage: undefined,\r\n    temperatureC: undefined,\r\n    temperatureF: undefined,\r\n    city: undefined,\r\n    country: undefined,\r\n    humidity: undefined,\r\n    description: undefined,\r\n    icon: \"CLEAR_DAY\",\r\n    sunrise: undefined,\r\n    sunset: undefined,\r\n    errorMsg: undefined,\r\n  });\r\n\r\n  function componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      this.getPosition()\r\n        //If user allow location service then will fetch data & send it to get-weather function.\r\n        .then((position) => {\r\n          this.getWeather(position.coords.latitude, position.coords.longitude);\r\n        })\r\n        .catch((err) => {\r\n          //If user denied location service then standard location weather will le shown on basis of latitude & latitude.\r\n          this.getWeather(28.67, 77.22);\r\n          alert(\r\n            \"You have disabled location service. Allow 'This APP' to access your location. Your current location will be used for calculating Real time weather.\"\r\n          );\r\n        });\r\n    } else {\r\n      alert(\"Geolocation not available\");\r\n    }\r\n\r\n    this.timerID = setInterval(\r\n      () => {\r\n        this.getWeather(state.lat, state.lon);\r\n      },\r\n      43000000 //default milliseconds is 600000\r\n    );\r\n  }\r\n\r\n  // componentWillUnmount() {\r\n  // clearInterval(this.timerID);\r\n  // }\r\n\r\n  // tick = () => {\r\n  //   this.getPosition()\r\n  //   .then((position) => {\r\n  //     this.getWeather(position.coords.latitude, position.coords.longitude)\r\n  //   })\r\n  //   .catch((err) => {\r\n  //     setState({ errorMessage: err.message });\r\n  //   });\r\n  // }\r\n\r\n  // getPosition = (options) => {\r\n  //   return new Promise(function (resolve, reject) {\r\n  //     navigator.geolocation.getCurrentPosition(resolve, reject, options);\r\n  //   });\r\n  // };\r\n\r\n  async function getWeather(lat, lon) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiKeys.base}current?lat=${lat}&lon=${lon}&key=${apiKeys.key}`\r\n      );\r\n      const result = response.data;\r\n\r\n      setState({\r\n        lat: result.lat,\r\n        lon: result.lon,\r\n        city: result.city_name,\r\n        temperatureC: Math.round(result.temp),\r\n        temperatureF: Math.round(result.temp * 1.8 + 32),\r\n        humidity: result.rh,\r\n        description: result.weather.description,\r\n        country: result.country_code,\r\n        // sunrise: this.getTimeFromUnixTimeStamp(data.sys.sunrise),\r\n\r\n        // sunset: this.getTimeFromUnixTimeStamp(data.sys.sunset),\r\n      });\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n\r\n    switch (state.description) {\r\n      case \"Clear sky\":\r\n        setState({ icon: \"CLEAR_DAY\" });\r\n        break;\r\n      case \"Few clouds\":\r\n        setState({ icon: \"PARTLY_CLOUDY_DAY\" });\r\n        break;\r\n      case \"Overcast clouds\":\r\n        setState({ icon: \"CLOUDY\" });\r\n        break;\r\n      case \"Moderate Rain\":\r\n        setState({ icon: \"RAIN\" });\r\n        break;\r\n      case \"Snow\":\r\n        setState({ icon: \"SNOW\" });\r\n        break;\r\n      case \"Heavy sleet\":\r\n        setState({ icon: \"WIND\" });\r\n        break;\r\n      case \"Sleet\":\r\n        setState({ icon: \"SLEET\" });\r\n        break;\r\n      case \"Fog\":\r\n        setState({ icon: \"FOG\" });\r\n        break;\r\n      case \"Haze\":\r\n        setState({ icon: \"FOG\" });\r\n        break;\r\n      case \"Thunderstorm with rain\":\r\n        setState({ icon: \"WIND\" });\r\n        break;\r\n      default:\r\n        setState({ icon: \"CLEAR_DA\" });\r\n    }\r\n  }\r\n\r\n  if (state.temperatureC) {\r\n    return (\r\n      <>\r\n        <div className=\"city\">\r\n          <div className=\"title\">\r\n            <h2>{state.city}</h2>\r\n            <h3>{state.country}</h3>\r\n          </div>\r\n          <div className=\"mb-icon\">\r\n            <ReactAnimatedWeather\r\n              icon={state.icon}\r\n              color={defaults.color}\r\n              size={defaults.size}\r\n              animate={defaults.animate}\r\n            />\r\n            <p>{state.main}</p>\r\n          </div>\r\n          <div className=\"date-time\">\r\n            <div className=\"dmy\">\r\n              <div id=\"txt\"></div>\r\n              <div className=\"current-time\">\r\n                <Clock format=\"HH:mm:ss\" interval={1000} ticking={true} />\r\n              </div>\r\n              <div className=\"current-date\">{dateBuilder(new Date())}</div>\r\n            </div>\r\n            <div className=\"temperature\">\r\n              <p>\r\n                {state.temperatureC}°<span>C</span>\r\n              </p>\r\n              {/* <span className=\"slash\">/</span>\r\n                {state.temperatureF} &deg;F */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Forcast icon={state.icon} weather={state.main} />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <img src={loader} style={{ width: \"50%\", WebkitUserDrag: \"none\" }} />\r\n        <h3 style={{ color: \"white\", fontSize: \"22px\", fontWeight: \"600\" }}>\r\n          Detecting your location\r\n        </h3>\r\n        <h3 style={{ color: \"white\", marginTop: \"10px\" }}>\r\n          Your current location wil be displayed on the App <br></br> & used for\r\n          calculating Real time weather.\r\n        </h3>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Weather;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}