{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\crebe\\\\Documents\\\\WEB DEVELOPMENT COURSE PROJECTS\\\\__MY_PROJECTS__\\\\weather_react\\\\src\\\\forcast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport apiKeys from \"./apiKeys\";\nimport ReactAnimatedWeather from \"react-animated-weather\";\nimport NodeGeocoder from \"node-geocoder\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forcast(props) {\n  _s();\n  const options = {\n    provider: \"google\",\n    // Optional depending on the providers\n    fetch: customFetchImplementation,\n    apiKey: \"YOUR_API_KEY\",\n    // for Mapquest, OpenCage, APlace, Google Premier\n    formatter: null // 'gpx', 'string', ...\n  };\n  const geocoder = NodeGeocoder(options);\n  const [query, setQuery] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const search = async () => {\n    try {\n      const response = await axios.get(`${apiKeys.base}current?lat=${props.lat}&lon=${props.lon}&key=${apiKeys.key}`);\n      const result = response.data;\n      setWeather(result);\n      setQuery(\"\");\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n      setQuery(\"\");\n      setError({\n        message: \"Not Found\",\n        query: query\n      });\n    }\n  };\n  const defaults = {\n    color: \"white\",\n    size: 112,\n    animate: true\n  };\n  useEffect(() => {\n    search(\"Feltham\");\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-icon\",\n      children: /*#__PURE__*/_jsxDEV(ReactAnimatedWeather, {\n        icon: props.icon,\n        color: defaults.color,\n        size: defaults.size,\n        animate: defaults.animate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today-weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: props.weather.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.weather.description !== \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"cityHead\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [props.weather.city, \", \", props.weather.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Temperature\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(props.weather.temperatureC), \"\\xB0c (\", props.weather.description, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Humidity\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(props.weather.humidity), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Visibility\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(props.weather.visibility), \" mi\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Wind Speed\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"temp\",\n              children: [Math.round(props.weather.wind.speed), \" Km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [error.query, \" \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Forcast, \"Qjpisn287hv7Izts5ZiXkvGtQwo=\");\n_c = Forcast;\nexport default Forcast;\nvar _c;\n$RefreshReg$(_c, \"Forcast\");","map":{"version":3,"names":["React","useState","useEffect","axios","apiKeys","ReactAnimatedWeather","NodeGeocoder","jsxDEV","_jsxDEV","Forcast","props","_s","options","provider","fetch","customFetchImplementation","apiKey","formatter","geocoder","query","setQuery","error","setError","search","response","get","base","lat","lon","key","result","data","setWeather","console","log","message","defaults","color","size","animate","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","weather","city","description","country","Math","round","temperatureC","humidity","visibility","wind","speed","_c","$RefreshReg$"],"sources":["C:/Users/crebe/Documents/WEB DEVELOPMENT COURSE PROJECTS/__MY_PROJECTS__/weather_react/src/forcast.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport apiKeys from \"./apiKeys\";\r\nimport ReactAnimatedWeather from \"react-animated-weather\";\r\nimport NodeGeocoder from \"node-geocoder\";\r\n\r\nfunction Forcast(props) {\r\n  const options = {\r\n    provider: \"google\",\r\n\r\n    // Optional depending on the providers\r\n    fetch: customFetchImplementation,\r\n    apiKey: \"YOUR_API_KEY\", // for Mapquest, OpenCage, APlace, Google Premier\r\n    formatter: null, // 'gpx', 'string', ...\r\n  };\r\n  const geocoder = NodeGeocoder(options);\r\n\r\n  const [query, setQuery] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const search = async () => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${apiKeys.base}current?lat=${props.lat}&lon=${props.lon}&key=${apiKeys.key}`\r\n      );\r\n      const result = response.data;\r\n      setWeather(result);\r\n      setQuery(\"\");\r\n      console.log(result);\r\n    } catch (error) {\r\n      console.log(error);\r\n\r\n      setQuery(\"\");\r\n      setError({ message: \"Not Found\", query: query });\r\n    }\r\n  };\r\n\r\n  const defaults = {\r\n    color: \"white\",\r\n    size: 112,\r\n    animate: true,\r\n  };\r\n\r\n  useEffect(() => {\r\n    search(\"Feltham\");\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"forecast\">\r\n      <div className=\"forecast-icon\">\r\n        <ReactAnimatedWeather\r\n          icon={props.icon}\r\n          color={defaults.color}\r\n          size={defaults.size}\r\n          animate={defaults.animate}\r\n        />\r\n      </div>\r\n      <div className=\"today-weather\">\r\n        <h3>{props.weather.city}</h3>\r\n        {/* <div className=\"search-box\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search any city\"\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            value={query}\r\n          />\r\n          <div className=\"img-box\">\r\n            <img\r\n              src=\"https://images.avishkaar.cc/workflow/newhp/search-white.png\"\r\n              onClick={search}\r\n              alt=\"search icon\"\r\n            />\r\n          </div>\r\n        </div> */}\r\n        <ul>\r\n          {props.weather.description !== \"undefined\" ? (\r\n            <div>\r\n              <li className=\"cityHead\">\r\n                <p>\r\n                  {props.weather.city}, {props.weather.country}\r\n                </p>\r\n              </li>\r\n              <li>\r\n                Temperature\r\n                <span className=\"temp\">\r\n                  {Math.round(props.weather.temperatureC)}Â°c (\r\n                  {props.weather.description})\r\n                </span>\r\n              </li>\r\n              <li>\r\n                Humidity\r\n                <span className=\"temp\">\r\n                  {Math.round(props.weather.humidity)}%\r\n                </span>\r\n              </li>\r\n              <li>\r\n                Visibility\r\n                <span className=\"temp\">\r\n                  {Math.round(props.weather.visibility)} mi\r\n                </span>\r\n              </li>\r\n              <li>\r\n                Wind Speed\r\n                <span className=\"temp\">\r\n                  {Math.round(props.weather.wind.speed)} Km/h\r\n                </span>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <li>\r\n              {error.query} {error.message}\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Forcast;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}